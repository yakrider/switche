

## Config settings file for Switche appliation .. uses toml format
# (Note that in toml format, root keys must be listed before any tables with square-brackets are started)
#
# The application will look for this file (switche.conf.toml) in the same directory from which it is running (if the location is writeable)
# If that location is not writeable, the config file will pick  ~/AppData/Local/Switche/ as conf file location
# Upon startup, if the conf file is not present in the location selected as above, a default conf file will be created in that location
# Configurations modified at run time (e.g. window size/position etc) will be written back to this file
# Most changes to this file (unless specified in the config) will be picked up by the application upon reload or restart


# Enable auto-hide of switche window upon losing focus .. default is true
# Note that this will also enable always-on-top for switche window
auto_hide_enabled = true

# Use grouped mode display .. default is true
# (This will trim the list of most recent windows, and under it will show all the windows grouped by executable)
group_mode_enabled = true

# Number of z-order top windows to display in recents-list when grouped mode is enabled .. default is 9, minimum is 2
number_of_top_recents_in_grouped_mode = 9

# Number of z-order last windows to display in recents-list when grouped mode is enabled .. default is 0
number_of_last_recents_in_grouped_mode = 0

# Enable switche to replace windows task-switcher upon alt-tab press .. default is true
# Note this this will install a lower-level keyboard hook to intercept alt-tab presses
# Also note that when not running elevated/as-admin, hooks can miss key events while elevated windows are foreground ..
# .. this can lead to unexpected behavior. As such, it is recommended to run switche elevated/as-admin if this is enabled
alt_tab_enabled = true

# Enable invocation of switche upon mouse wheel scroll while holding right mouse button down .. default is true
# Note that this will install a lower-level mouse hook to intercept right-mouse button/wheel events
mouse_right_btn_scroll_enabled = true



# Start switche window in the same size and location as it was when last closed .. default is true
# If this is true, when switche window is resized, its new dimensions are written back to this file
restore_window_dimensions = true

# Dimensions for switche window on startup .. this will be updated when/if the window is resized
# The units are in pixels, x and y are distances from the top-left corner of the screen .. default is (0, 0)
window_dimensions.location = { x = 0, y = 0 }

# Size of switche window on startup in pixels .. this will be updated when/if the window is resized
# Setting these to 0 will have switche auto-calculate window size/placement to place it about middle of screen .. defaault is (0, 0)
# (Note also that there is an auto-size widget in the top-ribbon which can be double-clicked to auto-size the window on demand)
window_dimensions.size = { width = 0, height = 0 }


# Enable logging for debugging or reporting errors .. default is false
# When enabled, the log files with names like "switche_log.<date>.log" will be generated in the same location as the active config file
# Note: Enabling logging is ONLY picked up upon restarting (not just reloading) the application
logging_enabled = false
# Level of logging (if enabled) .. default is "INFO" .. options are "DEBUG", "INFO", "WARN", "ERROR"
logging_level = "INFO"


# List of exes to exclude from the displayed list of windows .. default has "WDADesktopService.exe"
# for any specified exe, restriction to a specific title can be specified after a semicolon, e.g. "explorer.exe;QTTabBar Preview Window"
exe_exclusions_list = [
    "WDADesktopService.exe",
    "SearchUI.exe"
]


# Enable auto-ordering of windows groups by their z-index aggregated over time .. default is true
# If this is set to false, group ordering specified in the 'exe_manual_ordering_seq' will be used
auto_order_window_groups = true

# Manual specification of ordering of (groups of) exes if the above is false .. default is empty
# The ordering position for windows of unspecified exes can be denoted as "__unknown__" (while others are e.g. "some_app.exe")
exe_manual_ordering_seq = [
    "__unknown__"
]


# Hotkeys to invoke switche, specified as a string array .. default is ["F1", "Ctrl+Alt+F15"]
# Hotkey specification strings map directly to tauri hotkey specs .. they are summarized below :
#   Alt, Shift, Ctrl, Cmd, CmdOrCtrl, CmdOrAlt, A-Z, 0-9, F1-F24,
#   ArrowUp, ArrowDown, ArrowLeft, ArrowRight, Home, End, PageUp, PageDown,
#   Space, Enter, Backspace, Delete, Insert, Tab, Escape
# Combinations can be created as e.g. : "Ctrl+Shift+A"
# Note: Updates to this config are ONLY picked up upon restarting (not just reloading) the application
switche_invocation_hotkeys = ["F1", "Ctrl+Alt+F15"]


# Hotkeys to directly switch to the last-active window (z-idx:0+1), specified as a string array .. default is ["Alt+F1", "Ctrl+Alt+F16"]
# Note: Updates to this config are ONLY picked up upon restarting (not just reloading) the application
last_window_direct_switch_hotkeys = ["Alt+F1", "Ctrl+Alt+F16"]
# Hotkeys to directly switch to the second-last-active window (z-idx:0+2), specified as a string array .. default is ["Alt+Ctrl+F1", "Ctrl+Alt+F17"]
second_last_window_direct_switch_hotkeys = ["Alt+Ctrl+F1", "Ctrl+Alt+F17"]
# Hotkeys to directly switch to the third-last-active window (z-idx:0+3), specified as a string array .. default is ["Alt+Shift+F1", "Ctrl+Alt+F18"]
third_last_window_direct_switch_hotkeys = ["Alt+Shift+F1", "Ctrl+Alt+F18"]


# Hotkeys to take a snapshot of the current list of windows, and scroll through them without bringing switche up
# (defaults are "Alt+Shift+F15", "Alt+Shift+F16", "Alt+Shift+F17" for taking-snapshot, next-in-list, prev-in-list respectively
# (note that the defaults are intended to be driven by external key manager from more ergonomic triggers)
windows_list_snapshot_hotkeys = ["Alt+Shift+F15"]
snap_list_switch_next_hotkeys = ["Alt+Shift+F16"]
snap_list_switch_prev_hotkeys = ["Alt+Shift+F17"]

# Configuration for optional user-specifiable hotkeys to directly switch to specific app (if present at the time)
# Each entry can be listed under [[flex_hotkey]] table heading, and must have a 'hotkey' specified
# The optional 'exe' field is the executable name (without the path) of the app to switch to
# The optional 'title' field is the window-title of the app to switch to (if present)
# The optional 'allow_partial_match' is [true/false] on whether the match must be exact or can be partial (default is false)
# The hotkey will toggle between the cur window and the first not-currently-top window matching the specs (if any)
# Note: Updates to these configs are ONLY picked up upon restarting (not just reloading) the application

[[flex_hotkey]]
hotkey = "Ctrl+Alt+F24"
exe = "chrome.exe"

[[flex_hotkey]]
hotkey = "Ctrl+Alt+F23"
exe = "MusicBee.exe"

[[flex_hotkey]]
hotkey = "Ctrl+Alt+F22"
exe = "idea64.exe"

[[flex_hotkey]]
hotkey = "Ctrl+Alt+F21"
exe = "notepad++.exe"

[[flex_hotkey]]
hotkey = "Ctrl+Alt+F20"
exe = "chrome.exe"
title = "Tabs Outliner"

[[flex_hotkey]]
hotkey = "Ctrl+Alt+F19"
exe = "chrome.exe"
title = "Claude"
allow_partial_match = true

[[flex_hotkey]]
hotkey = "Alt+Shift+F24"
exe = "chrome.exe"
title = "kbd: Keyboard Events Printer"
